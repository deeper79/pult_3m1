#ifndef PULT_H
#define PULT_H


class pult
{
public:

    enum{
        scale_0_15,
        scale_0_30,
        scale_15_45
    };

    enum{
        Krug,
        Sektor,
        Regim_1A
    };

};
enum{
    IN,OUT
};




typedef struct {

    union {
        char data[64];

        struct {
            uint16_t KC;

            struct {
                uchar key_KU_on    :1; // 0 кнопка нажата автоматы подготовлены по КУ
                uchar key_UM_on    :1; // 1 кнопка нажата автоматы подготовлены по УМ
                uchar ruch_obz     :1; // 2 кнопка нажата сопровождение ручное
                uchar poisk        :1; // 3 кнопка нажата	Поиск
                uchar zahvat       :1; // 4 кнопка нажата Захват
                uchar auto_traking :1; // 5 кнопка нажата сопровождение автоматическое
                uchar sloi_1_2     :1; // 6 кнопка нажата слои 1 - 2
                uchar sloi_1_5     :1; // 7 кнопка нажата слои 1 - 5
                uchar zone_up      :1; // 8 кнопка нажата верхняя зона
                uchar zone_down    :1; // 9 кнопка нажата нижняя зона
                uchar ret          :1; // 10 кнопка нажата возврат
                uchar stop         :1; // 11 кнопка нажата останов
                uchar krug         :1; // 12 кнопка нажата курговой обзор
                uchar ruch         :1; // 13 кнопка нажата ручной обзор
                uchar sekt         :1; // 14 кнопка нажата секторный обзор
                uchar GS_ON        :1; // 15 кнопка нажата ГС
            } SD1;

            struct {
                uchar FNLC      :1; // 0 кнопка нажата ФНЛЦ
                uchar UV        :1; // 1 кнопка нажата УВ
                uchar PR        :1; // 2 кнопка нажата ПР
                uchar tech_PR1  :1; // 3 кнопка нажата Тех.Пр1
                uchar CU_on     :1; // 4 кнопка нажата ЦУ
                uchar Pr1_up    :1; // 5 кнопка нажата стрелка вверх
                uchar Pr1_left  :1; // 6 кнопка нажата стрелка влево
                uchar Pr1_zero  :1; // 7 кнопка нажата стрелка ноль
                uchar Pr1_right :1; // 8 кнопка нажата стрелка вправо
                uchar Pr1_down  :1; // 9 кнопка нажата стрелка вниз
                uchar Pr1_P1    :1; // 10 кнопка нажата Р1
                uchar Pr1_P2    :1; // 11 кнопка нажата Р2
                uchar Pr1_minus :1; // 12 кнопка нажата минус
                uchar Pr1_plus  :1; // 13 кнопка нажата Плюс
                uchar Pr1_M     :1; // 14 кнопка нажата М
                uchar Skan      :1; // 15 кнопка нажата Скан.
            } SD2;

            struct {
                uchar F1        :1; //бит 11
                uchar F2        :1; //бит 12
                uchar tou_up    :1; //бит 3
                uchar tou_left  :1; //бит 6
                uchar tou_zero  :1; //бит 5
                uchar tou_right :1; //бит 4
                uchar tou_down  :1; //бит 7
                uchar T         :1; //бит 8
                uchar B         :1; //бит 9
                uchar A         :1; //бит 13
                uchar K         :1; //бит 13
                uchar krest     :1; //бит 8
                uchar inv       :1; //бит 2
                uchar TVH       :1;
                uchar TVU       :1;
                uchar TOU_ON    :1;
            } SD3;

            struct {
                uchar brigh_up      :1; //бит 4
                uchar brigh_down    :1; //бит 5
                uchar contarst_up   :1; //бит 0
                uchar contarst_down :1; //бит 1
                uchar focus_up      :1; //бит 6
                uchar focus_down    :1; //бит 7
                uchar LD_on         :1; //бит 0
                uchar tou_P         :1; //бит 1
                uchar LD1           :1; //бит 2
                uchar LD2           :1; //бит 3
                uchar C             :1; //бит 10
                uchar tou_1         :1; //бит 11
                uchar tou_2         :1; //бит 12
                uchar LD_razr       :1;
                uchar bit_62        :1;
                uchar bit_63        :1;
            } SD4;

            uchar CRC;
            uchar dummy;
        };
    };
} Data_out_Pribor1M_S;

//#pragma pack(1)
typedef struct
{
    union
    {
        uchar data[64];

        struct
        {
           struct
            {
                uchar key_KU_on    :1; // 0  Автоматы подготовлены по КУ
                uchar key_UM_on    :1; // 1  Автоматы подготовлены по УМ
                uchar ruch_obz     :1; // 2  Режим сопровождение ручное
                uchar poisk        :1; // 3  Режим поиск
                uchar zahvat       :1; // 4  Режим захват
                uchar auto_traking :1; // 5  Режим сопровождение автоматическое
                uchar sloi_1_2     :1; // 6  слои 1 - 2
                uchar sloi_1_5     :1; // 7  слои 1 - 5
                uchar zone_up      :1; // 8  верхняя зона
                uchar zone_down    :1; // 9  нижняя зона
                uchar ret          :1; // 10 возврат
                uchar stop         :1; // 11 останов
                uchar krug         :1; // 12 курговой обзор
                uchar ruch         :1; // 13 ручной обзор
                uchar sekt         :1; // 14 секторный обзор
                uchar reg_IC       :1; // 15 Режим ИС
            } SD1;

            struct
            {
                uchar FNLC      :1; // 0  ФНЛЦ
                uchar UV        :1; // 1  УВ
                uchar PR        :1; // 2  ПР
                uchar tech_PR1  :1; // 3  Тех.Пр1
                uchar CU_on     :1; // 4  Режим ЦУ
                uchar Pr1_up    :1; // 5  стрелка вверх
                uchar Pr1_left  :1; // 6  стрелка влево
                uchar Pr1_zero  :1; // 7  стрелка ноль
                uchar Pr1_right :1; // 8  стрелка вправо
                uchar Pr1_down  :1; // 9  стрелка вниз
                uchar Pr1_P1    :1; // 10 Р1
                uchar Pr1_P2    :1; // 11 Р2
                uchar Pr1_minus :1; // 12 Минус
                uchar Pr1_plus  :1; // 13 Плюс
                uchar Pr1_M     :1; // 14 М
                uchar Skan      :1; // 15 Скан.
            } SD2;

            struct
            {
                uchar F1        :1; // 0  ТОУ Ф1
                uchar F2        :1; // 1  ТОУ Ф2
                uchar tou_up    :1; // 2  ТОУ вверх
                uchar tou_left  :1; // 3  ТОУ влево
                uchar tou_zero  :1; // 4  ТОУ ноль
                uchar tou_right :1; // 5  ТОУ вправо
                uchar tou_down  :1; // 6  ТОУ вниз
                uchar T         :1; // 7  ТОУ Т
                uchar B         :1; // 8  ТОУ В
                uchar A         :1; // 9  ТОУ А
                uchar K         :1; // 10 ТОУ К
                uchar krest     :1; // 11 ТОУ крест
                uchar inv       :1; // 12 ТОУ
                uchar TVH       :1; // 13 ТВШ
                uchar TVU       :1; // 14 ТВУ
                uchar TOU_ON    :1; // 15 ТОУ включено
            } SD3;

            struct
            {
                uchar bit_62        :1; // 0  Резерв
                uchar bit_63        :1; // 1  Резерв
                uchar contarst_up   :1; // 2  Контрастность выше
                uchar contarst_down :1; // 3  Контрастность ниже
                uchar focus_up      :1; // 4  Фокус дальше
                uchar focus_down    :1; // 5  Фокус ближе
                uchar LD_on         :1; // 6  ЛД включено высокое
                uchar tou_P         :1; // 7  ТОУ
                uchar LD1           :1; // 8  ЛД выстрел
                uchar LD2           :1; // 9  ЛД
                uchar C             :1; // 10 ТОУ
                uchar tou_1         :1; // 11 ТОУ1
                uchar tou_2         :1; // 12 ТОУ2
                uchar bit_61        :1; // 13 резерв
                uchar brigh_up      :1; // 14 Яркость выше
                uchar brigh_down    :1; // 15 Яркость ниже
            } SD4;

            struct
            {
                uchar bit_70    :1; // 0 		 Резерв
                uchar bit_71    :1; // 1		 Резерв
                uchar bit_72    :1; // 2		 Резерв
                uchar bit_73    :1; // 3		 Резерв
                uchar bit_74    :1; // 4		 Резерв
                uchar bit_75    :1; // 5		 Резерв
                uchar bit_76    :1; // 6		 Резерв
                uchar tech_kost :1; // 7		 Режим Тех.пр1 + КУ/УМ
                uchar zona_sloi	:3; // 8-10  номер слоя
                uchar DLD       :1; // 11    Флаг передачи данных
                uchar resurs    :1; // 12    Ресурс
                uchar resurs_LD :1; // 13    Ресурс ЛД
                uchar GS_ON     :2; // 14-15 Режим ГС
            } SD5;

            int16_t KU;			 // Курсовой угол СД6
            int16_t UM;			 // Угол места		СД7
            int16_t vizir;	 // Визир					СД8
            int16_t TOU_out; // Дальность ЛД	СД9

            struct
            {
                uchar system_unstable :1; // 0  Превышение по КУ скорости ±110°
                uchar BP1             :1; // 1  Отказ БП1
                uchar BP2             :1; // 2  Отказ БП2
                uchar CC		          :1; // 3  Сбой по линии СС
                uchar BG              :1; // 4  Отказ БГ
                uchar AGV             :1; // 5  Отказ АГВ
                uchar MUP_AC          :1; // 6  Отказ блока БУП
                uchar KU_CC           :1; // 7
                uchar TKLD            :1; // 8
                uchar flash_error     :1; // 9  Сбой чтения flash или недостоверные данные
                uchar BG_DUSX  				:1; // 10 Отказ БГ ДУС Х
                uchar BG_DUSY  				:1; // 11 Отказ БГ ДУС Y
                uchar BG_DUSZ  				:1; // 12 Отказ БГ ДУС Z
                uchar CY_KU           :1; // 13 Отказ СУ.01 по оси КУ
                uchar CY_UM1          :1; // 14 Отказ первого СУ.01 по оси УМ
                uchar CY_UM2          :1; // 15 Отказ второго Су.01 по оси УМ
            } SD10;

            int16_t DUSX;  // Скорость БГ ДУС Х СД11
            int16_t DUSY;  // Скорость БГ ДУС Y СД12
            int16_t DUSZ;	 // Скорость БГ ДУС Z СД13
            int16_t DUSKU; // Скорость по КУ		СД14

            int16_t BK;		// Угол бортовой качки СД15
            int16_t KK;		// Угол килевой качки	 СД16
            int16_t Kypc; // Курсовой угол			 СД17

            int16_t AC_KU;	// Угловая ошибка АС по КУ		СД18
            int16_t AC_UM;	// Угловая ошибка АС по УМ		СД19
            int16_t wAC_KU; // Скоростная ошибка АС по КУ СД20
            int16_t wAC_UM; // Скоростная ошибка АС по УМ СД21

            int16_t TargetKU; // Целеуказание КУ СД22
            int16_t TargetUM; // Целеуказание УМ СД23

            int16_t EFNLC; // Управление УМ в режиме УВ и ФНЛЦ СД24

            struct
            {
                uchar UMTMOFF				:1; // 0		 Отключение ТМ УМ
                uchar UMMotor1ON		:1; // 1		 Включение привода 1 УМ
                uchar UMMotor1Error :1; // 2		 Ошибка привода 1 УМ
                uchar UMMotor1Regim :2; // 3-4	 Режим привода 1 УМ
                uchar UMMotor2ON		:1; // 5		 Включение привода 2 УМ
                uchar UMMotor2Error :1; // 6		 Ошибка привода 2 УМ
                uchar UMMotor2Regim :2; // 7-8	 Режим привода 2 УМ
                uchar KUTMOFF				:1; // 9		 ТМ КУ отключена
                uchar KUTMKoncOFF		:1; // 10		 Концевик включения ТМ КУ
                uchar KUTMKoncON		:1; // 11		 Концевик отключения ТМ КУ
                uchar KUMotorON			:1; // 12		 Включение привода КУ
                uchar KUMotorError	:1; // 13		 Ошибка привода КУ
                uchar KUMotorRegim	:2; // 14-15 Режим привода КУ
            } SD25;

            struct
            {
                uchar KUTMError			 :1; // 0	 Ошибка ТМ КУ
                uchar BGError				 :1; // 1	 Ошибка БГ
                uchar BGDUSXError		 :1; // 2	 Ошибка БГ ДУС X
                uchar BGDUSYError		 :1; // 3  Ошибка БГ ДУС Y
                uchar BGDUSZError		 :1; // 4  Ошибка БГ ДУС Z
                uchar AGVError			 :1; // 5  Ошибка АГВ
                uchar AGVDUSXError	 :1; // 6  Ошибка АГВ ДУС X
                uchar AGVDUSYError	 :1; // 7  Ошибка АГВ ДУС Y
                uchar AGVDUSZError	 :1; // 8  Ошибка АГВ ДУС Z
                uchar BUPUMCCError	 :1; // 9  Ошибка БУП по линии СС
                uchar BUPUMDataError :1; // 10 Ошибка БУП по линии Data
                uchar PLDCVMError		 :1; // 11 Ошибка ПЛИС ЦВМ
                uchar DUKUError			 :1; // 12 Ошибка ДУ КУ
                uchar DUKUCRCError	 :1; // 13 Ошибка crc ДУ КУ
                uchar DUUMError			 :1; // 14 Ошибка ДУ УМ
                uchar DUUMCRCError	 :1; // 15 Ошибка crc ДУ УМ
            } SD26;

            struct
            {
                uchar BP1Error		 :1; // 0			Ошибка БП1
                uchar BP2Error		 :1; // 1			Ошибка БП2
                uchar TKLDLDError  :1; // 2			Ошибка ТКЛД по линии ЛД
                uchar TKLDCamError :1; // 3			Ошибка ТКЛД по линии камеры
                uchar KoncDown		 :1; // 4			Нижний концевик
                uchar KoncUp			 :1; // 5			Верхний концевик
                uchar LDVisokoe		 :1; // 6			ЛД высокое
                uchar LDShot			 :1; // 7			Выстрел ЛД
                uchar LDShotError  :1; // 8			Ошибка выстрела ЛД
                uchar ProgON			 :1; // 9			Активна программа включения
                uchar ProgOFF			 :1; // 10		Активна программа выключения
                uchar n_sub				 :5; // 11-15 Номер этапа включения/выключения
            } SD27;

            int16_t AGVDUSX; // Скорость АГВ ДУС X СД28
            int16_t AGVDUSY; // Скорость АГВ ДУС Y СД29
            int16_t AGVDUSZ; // Скорость АГВ ДУС Z СД30

            uint16_t counter; // Счетчик СД31

            uchar CRC; // Контрольная сумма СД32
       };
    };
} Data_in_Pribor1M_S;

//#pragma pack(1)

typedef struct{
    union{
        uchar data[64];
        struct{
            struct
            {
                 uchar TOU                   :1; // индикация кнопки «ТОУ» сенсорной панели ТОУ
                 uchar system_config         :3; // признаки наличия/ отсутствия в составе СУ «Багира-М» приборов в зависимости от спецификации
                  /*
                  КОНФИГ. СИСТЕМЫ  - признаки наличия/ отсутствия в составе СУ «Багира-М» приборов в зависимости от спецификации:
                 («1»-наличие, «0»-отсутствие)
                  хх1 – наличие источников двух целеуказаний от внешних систем ЦУ (отображать окно «ВЫБОР ВНЕШНЕГО ЦУ» и кнопки «ЦУ1», «ЦУ2»);
                  00х – не рисовать режимы ЦУ
                  01х –режимы ЦУ : ЦЕНТР, РЕЗ, АВТОНОМ
                  10х– режимы ЦУ : ЦЕНТР, РЕЗ1, АВТОНОМ, РЕЗ2
                  */
                 uchar dummy                 :2; //
                 uchar regim_SPC             :3; // индикация кнопок области «РЕЖИМ РАБОТЫ» кнопочной панели
                 uchar interception_on_angle :2; // ндикация кнопки «ПО УГЛАМ» области «ПЕРЕХВАТ АУРС» кнопочной панели
                 uchar Inertial_avtomat      :3; // индикация кнопок области «ИНЕРЦИОННОЕ СОПРОВОЖДЕНИЕ» кнопочной панели
                 uchar Avtomat_D             :1; // индикация кнопки «Д ВКЛ» области «АВТОМАТЫ ПОДГОТОВЛЕНЫ» кнопочной панели:
                 uchar Shire                 :1; // индикация кнопки «ШИРЕ» кнопочной панел
            }SD1;

            struct{
                uchar dummy               :3; //
                uchar Zoom                :1; // индикация кнопки «ЛУПА» кнопочной панели и установка режима «ЛУПА»
                 uchar TV                  :1; // индикация кнопки «ТВ» кнопочной панели
                 uchar PRS                 :1; // индикация кнопки «ВКЛ» области «ПРИСТРЕЛКА» кнопочной панели и установка режима «ПРИСТРЕЛКА»
                 uchar VRU                 :1; // индикация кнопки «ВРУ» кнопочной панели
                 uchar UPD                 :1; // индикация кнопки «УПД» кнопочной панели
                 uchar IP                  :1; // индикация кнопки «ИП» кнопочной панели
                 uchar vobl                :1; // индикация кнопки «ВОБУЛ» кнопочной панели
                 uchar Avtonom_RLSO        :1; // признак режима взаимодействия с РЛСО
                 uchar errors_3M1          :5; // индикация неисправностей на мониторе (00001 – 3Б-М;00010 – 2А-М;00100 – 2М;01000 – 1М;10000 – 3М-1.)
               }SD2;

            struct{
                uchar CU                  :2; // индикация типа ЦУ на индикаторе (01 – индикатор «осн» (основное ЦУ);10 – индикатор «рез» (резервное ЦУ)
                uchar interception_on_D   :1; // индикатор «Перехват по Д» на мониторе
                uchar AE                  :1; // ндикатор «СПЦ» на мониторе
                uchar UPP                 :5; // индикация области «УПП» на мониторе 00001 – «выс»;00010 – «готов»;00100 – «сигн. раб.»;01000 – «пробой СВЧ»;10000 – «АПЧ»
                /*
                   при УПП = хххх1 на кнопочной панели УПП в области «ВЫСОКОЕ» подсвечивается кнопка «ВКЛ» иначе при УПП = хххх0 подсвечивается кнопка «ОТКЛ»;
                   при УПП = х1ххх на кнопочной панели УПП включается мигающая подсветка кнопки «СБРОС ЗАЩ.» иначе при УПП = х0ххх подсветка отсутствует.
                 */
                uchar laser_premisson     :1; // команда «РАЗРЕШЕНИЕ»
                uchar count_PRS           :3; // количество произведенных измерений в режиме «ПРИСТРЕЛКА»
                uchar conut_SD            :2; //
                uchar dummy               :1; //

               }SD3;


            struct{

                uchar SPC                 :1; // индикатор «СПЦ» на мониторе
                uchar CU_answer           :3; // ОТВЕТ ПО ЦУ – индикация кнопок  «МЦ», «ВЦ», «Раб. автон.» области «ОТВЕТ ПО УКАЗАНИЮ» сенсорной панели ТОУ (001 – индикация кнопки «МЦ»;010 – индикация кнопки «ВЦ»;100 – индикация кнопки «Раб. автон.».)
                uchar dummy1              :1; //
                uchar CU_avtonom          :2; //
                uchar CU_rezerv_1         :2; //
                uchar CU_center           :2; //
                uchar CU_rezerv_2         :2; //
                uchar dummy               :3; //

            }SD4;

            uint16_t     kurs;              // курс корабля (курс свой) - цена  15разряда = 3000 т.д.;
            uint16_t     Daln;              // Д  – дальность - цена  15разряда = 32768 м
            uint16_t     Daln_vizir_target; // Д1вц – дальность 1-ого визира цели - цена  15разряда = 32768 м;
            uint16_t     Daln_vizir_missle; // Д1вр – дальность 1-ого визира ракеты - цена  15разряда = 32768 м;
            uint16_t     target_velocity;   // Vц – скорость цели - 15разряд – знаковый, цена 14разряда = 2048 м/с (отрицательные значения передаются в дополнительном коде);
            uint16_t     target_kurs;       // Qц – курс цели - цена  15разряда = 3000 т.д.;
            uint16_t     target_height;     // Н – высота цели -  цена младшего разряда =1 м;
            uint16_t     target_param;      // Р – параметр цели -  цена младшего разряда =1 м;
            uint16_t     time_param;        // tпар – время до параметра - цена младшего разряда =1 с;
            uint16_t     peleng_RLSO;       // Развертка РЛСО – пеленг развертки РЛСО - цена 15разряда = 3000 т.д.
            uint16_t     vizir_RLSO;        // пеленг визира РЛСО - цена 15разряда = 3000 т.д.;
            uint16_t     Daln_RLSO;         // дальность визира РЛСО - цена 15разряда = 32768 м
            uint16_t     delata_KU_IO;      // значение сигнала ошибки по курсовому углу (для режимов «ЛУПА» и ИО область экрана «Ошибка») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_UM_IO;      // значение сигнала ошибки по углу места (для режимов «ЛУПА» и ИО область экрана «Ошибка») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_KU_PRS1;    // значение отклонения трассы снаряда по курсовому углу (для измерения №1 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_UM_PRS1;    // значение отклонения трассы снаряда по углу места (для измерения №1 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_KU_PRS2;    // значение отклонения трассы снаряда по курсовому углу (для измерения №2 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_UM_PRS2;    // значение отклонения трассы снаряда по углу места (для измерения №2 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_KU_PRS3;    // значение отклонения трассы снаряда по курсовому углу (для измерения №3 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.
            uint16_t     delata_UM_PRS3;    // значение отклонения трассы снаряда по углу места (для измерения №3 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.
            uint16_t     delata_KU_PRS4;    // значение отклонения трассы снаряда по курсовому углу (для измерения №4 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_UM_PRS4;    // начение отклонения трассы снаряда по углу места (для измерения №4 режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.
            uint16_t     delata_KU_PRS;     // значение поправки в курсовой угол  наведения АУ (для режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.;
            uint16_t     delata_UM_PRS;     // значение поправки в угол места  наведения АУ (для режима «ПРИСТРЕЛКА») - 15разряд – знаковый, цена 14разряда = 1500 т.д.
            uint16_t     H_fnlc;            // начение высоты в режиме ФНЛЦ - цена младшего разряда =1 м (отрицательные значения передаются в дополнительном коде);
            uint16_t     H_uv;              // значение установленной высоты для режима УВ - диапазон от -40 м до 200 м, цена младшего разряда =1 м (отрицательные значения передаются в дополнительном коде);
            /*
                СД31-СД32  - управление засветкой кнопок
                прибора 3М-1. («01» - засветить кнопку, «10» - мигание кнопки,   «00» -      погасить кнопку.)

                Сч. СД31-32 – счетчик передач данных в словах СД31 –СД32:
                    00 – в СД31 –СД32 передается подсветка кнопок ЦУ (штатн.)
                    01 – в СД31 передается ГОД, в СД32 –МЕСЯЦ / ДЕНЬ  от КАМА-НС.
                    10 – в СД31 передается ВРЕМЯ ст. часть, в СД32 – ВРЕМЯ мл. часть от КАМА-НС.
                    11 – резерв
                    (Примечание: При получении значения ГОД =  0  - использовать системное время прибора 3М-1
                     данные общекорабельного времени от КАМА-НС не достоверны)
             */
            struct{
                uchar CU2_ind    :2;  // индикация кнопок «ЦУ1», «ЦУ2» области «ВЫБОР ВНЕШНЕГО ЦУ»;
                uchar CU1_ind    :2;  // индикация кнопок «ЦУ1», «ЦУ2» области «ВЫБОР ВНЕШНЕГО ЦУ»;
                uchar dummy      :8; //
                uchar dummy1     :4; //


            }SD31;

            struct{
                 uchar dummy  :6; //
                 uchar cancel :2; // индикация кнопок «ОТМЕНА»
                 uchar CU4    :2; // индикация кнопок «Ц4»
                 uchar CU3    :2; // индикация кнопок «Ц3»
                 uchar CU2    :2; // индикация кнопок «Ц2»
                 uchar CU1    :2; // индикация кнопок «Ц1»
              }SD32;

            uchar dummy;
            uchar dummy1;

        };
    };

}Data_in_BC123_S;



//#pragma pack(1)

typedef struct{
    union{
        char data[64];
        struct{
                uchar TOU           :1; // 0 ТОУ – нажатие кнопки «ТОУ» сенсорной панели ТОУ
                uchar LD            :1; // 1 ЛД  – нажатие кнопки «ЛД» сенсорной панели ТОУ
                uchar C             :1; // 2 С   – нажатие кнопки «С» сенсорной панели ТОУ
                uchar one           :1; // 3 1   – нажатие кнопки «1» сенсорной панели ТОУ:
                uchar two           :1; // 4 2   – нажатие кнопки «2» сенсорной панели ТОУ
                uchar regim_15_45   :1; // 5 15-45 – режим отображения локационной информации на дистанции 15-45 км
                uchar SPC_regim     :3; /* 6-8 РЕЖ. РАБОТЫ СПЦ – нажатие кнопок области «РЕЖИМ РАБОТЫ» кнопочной панели:
                                            001 – нажатие кнопки «ШТАТ»;
                                            010 – нажатие кнопки «АВТ»;
                                            100 – нажатие кнопки «СПЦ».*/
                uchar AURS_angle    :2; /* 9-10  ПЕР. АУРС ПО УГЛАМ – нажатие кнопки «ПО УГЛАМ» области «ПЕРЕХВАТ АУРС» кнопочной панели:               01 – нажатие кнопки «ПО УГЛАМ»;
                                                10 – нажатие кнопки «СБРОС АЗ»;
                                                00 – нет нажатия. */
                uchar Inetrtial     :3; /* 11-13 ИНЕРЦ. СОПР. – нажатие кнопок области «ИНЕРЦИОННОЕ СОПРОВОЖДЕНИЕ» кнопочной панели:
                                                001 – нажатие кнопки «ОТКЛ»;
                                                010 – нажатие кнопки «РУЧ»;
                                                100 – нажатие кнопки «АВТ» */
                uchar auto_D        :1; // 14 АВТ. ПО Д – нажатие кнопки «Д ВКЛ» области «АВТОМАТЫ ПОДГОТОВЛЕНЫ» кнопочной панели
                uchar shire         :1; // 15 нажатие кнопки «ШИРЕ» кнопочной панели

            }SD1;

            struct{
                 uchar dummy1           :1; // 0
                 uchar dummy2           :1; // 1
                 uchar SPC              :1; // 2 включение кнопки «СПЦ» панели УПП
                 uchar Zoom             :1; // 3 нажатие кнопки «ЛУПА» кнопочной панели и установка режима «ЛУПА»
                 uchar TV               :1; // 4 нажатие кнопки «ТВ» кнопочной панели
                 uchar PRS              :1; // 5 ПРС – нажатие кнопки «ВКЛ» области «ПРИСТРЕЛКА» кнопочной панели и установка режима «ПРИСТРЕЛКА"
                 uchar VRU              :1; // 6 ВРУ – нажатие кнопки «ВРУ» кнопочной панели
                 uchar UPD              :1; // 7 УПД – нажатие кнопки «УПД» кнопочной панели
                 uchar IP               :1; // 8 ИП – нажатие кнопки «ИП» кнопочной панели
                 uchar VOBL             :1; // 9 ВОБУЛ – нажатие кнопки «ВОБУЛ» кнопочной панели
                 uchar RLSO             :1; // 10 РЛСО – кнопка управления режимом взаимодействия с РЛСО
                 uchar dummy3           :1; // 11
                 uchar errors_3M1       :1; /* 12-15 НЕИСПРАВНОСТИ  3М-1 – неисправности 3М-1
                                                    0001 – нет сигналов собств. РЛС;
                                                    0010 – нет сигналов РЛСО;
                                                    0100 – резерв;
                                                    1000 – нет обмена с пр. 1М.*/
            }SD2;

            struct{
               uchar dummy1           :1; // 0
               uchar answer_CU        :3; /* 1-3 ОТВЕТ ПО ЦУ – нажатие кнопок  «МЦ», «ВЦ», «Раб. автон.» области «ОТВЕТ ПО УКАЗАНИЮ» сенсорной панели ТОУ:
                                                    001 – нажатие кнопки «МЦ»;
                                                    010 – нажатие кнопки «ВЦ»;
                                                    100 – нажатие кнопки «Раб. автон.».*/
               uchar block_error_3M1  :1; /* 4-13 НЕИСПРАВНОСТИ  БЛОКОВ 3М-1 – неисправности блоков 3М-1:
                                                0000000001 – неисправен контроллер КОНРАД 3.1 СУ 1;
                                                0000000010 – ошибка драйвера контроллера КОНРАД 3.1 СУ 1;
                                                0000000100 – неисправен контроллер КОНРАД 3.1 СУ 2;
                                                0000001000 – ошибка драйвера контроллера КОНРАД 3.1 СУ 2;
                                                0000010000 – неисправен модуль УСМК   СУ 1;
                                                0000100000 – ошибка драйвера модуля УСМК   СУ 1;
                                                0001000000 – неисправен модуль УСМК   СУ 2;
                                                0010000000 – ошибка драйвера модуля УСМК   СУ 2;
                                                0100000000 – неисправен модуль cPCI2SQ СУ 2;
                                                1000000000 – ошибка драйвера модуля cPCI2SQ СУ 2.*/

               uchar error_OEPU       :2; /* 14-15 НЕИСПР. ОЭМ – неисправности ТВ канала 3М-1:
                                                01 – неисправен модуль cPCI2SQ блока БС-10;
                                                10 – нет изображения (оборван ТВ кабель или закрыт объектив);
                                                11 – неисправен вычислительный узел ТВ или связь с ним. */

            }SD3;

            struct{

                uchar dummy1           :8; // 0-11
                uchar dummy2           :4; // 0-11
                uchar CU1              :1; // 12 ЦУ1  - нажатие кнопки «ЦУ1» области «ВЫБОР ВНЕШНЕГО ЦУ» сенсорной панели
                uchar CU2              :1; // 13 ЦУ2 - нажатие кнопки «ЦУ2» области «ВЫБОР ВНЕШНЕГО ЦУ» сенсорной панели:
                uchar CU3              :1; // 14 ЦУ3 - нажатие кнопки «ЦУ2» области «ВЫБОР ВНЕШНЕГО ЦУ» сенсорной панели:
                uchar CU4              :1; // 15 ЦУ4 - нажатие кнопки «ЦУ2» области «ВЫБОР ВНЕШНЕГО ЦУ» сенсорной панели:

            }SD4;

    };
}Data_out_BC123_S;


#endif // PULT_H
